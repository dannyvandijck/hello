node {
    def app
	def mvnHome
	def registry = "dannyvandijck/docker-test-repository"
	def dockerImageName =   registry + ":${env.BUILD_NUMBER}"

    stage('Clone repository') {
        /* Let's make sure we have the repository cloned to our workspace */
        checkout scm
    }

	stage('Build code') {
            // Get the Maven tool.
            // ** NOTE: This 'M3' Maven tool must be configured
            // **       in the global configuration.           
            mvnHome = tool 'M3'
			bat(/"${mvnHome}\bin\mvn" -Dmaven.test.failure.ignore clean package/)
            def pom = readMavenPom file:'pom.xml'
            print pom.version
            env.version = pom.version
    }
    
    stage('Test code') {
			junit '**/target/surefire-reports/TEST-*.xml'
			archive 'target/*.jar'
	}
        
    stage('Build image') {
        /* This builds the actual image; synonymous to
         * docker build on the command line */

        app = docker.build( dockerImageName )
    }

    stage('Test image') {
        app.inside {
            bat 'echo "Tests passed"'
        }
    }

    stage('Push image') {
        /* Finally, we'll push the image with two tags:
         * First, the incremental build number from Jenkins
         * Second, the 'latest' tag.
         * Pushing multiple tags is cheap, as all the layers are reused. */
        docker.withRegistry('', 'dockerhub') {
            app.push("${env.BUILD_NUMBER}")
            app.push("latest")
        }
    }
}